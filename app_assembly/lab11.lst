     1                                  ;Panaite Cristian
     2                                  
     3                                  bits 32
     4                                  
     5                                  global start        
     6                                  
     7                                  extern exit, scanf, printf
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ;Se cere sa se citeasca de la tastatura un sir de numere, date in baza 16 (se citeste de la tastatura un sir de caractere si in memorie trebuie stocat un sir de numere). Sa se afiseze valoarea zecimala a nr atat ca 
    13                                  
    14                                  segment data use32 class=data
    15 00000000 6E203D2000                  mesaj_n db "n = ", 0
    16 00000005 257300                      format_numar_char db '%s', 0
    17 00000008 256400                      format_n db "%d", 0
    18 0000000B 496E74726F64756365-         mesaj_nHexa db "Introduceti un numar hexazecimal: ", 0
    18 00000014 746920756E206E756D-
    18 0000001D 617220686578617A65-
    18 00000026 63696D616C3A2000   
    19 0000002E 25640A00                    format_decimal_signed db "%d", 10, 0
    20 00000032 25750A00                    format_decimal_unsigned db "%u", 10, 0
    21 00000036 72657072657A656E74-         mesaj_signed db "reprezentare cu semn : %d", 10, 0
    21 0000003F 617265206375207365-
    21 00000048 6D6E203A2025640A00 
    22 00000051 72657072657A656E74-         mesaj_unsigned db "reprezentare fara semn : %u", 10, 0
    22 0000005A 617265206661726120-
    22 00000063 73656D6E203A202575-
    22 0000006C 0A00               
    23                                      
    24 0000006E 00000000                    n dd 0
    25 00000072 00000000                    s dd 0
    26 00000076 00000000<rept>              a times 10 dd 0
    27 0000009E FF                            db -1
    28 0000009F 00000000<rept>              b times 10 dd 0
    29                                      
    30                                  
    31                                  segment code use32 class=code
    32                                      start:
    33                                          ; scanf("%d", &n)
    34                                          ; for i to n :
    35                                          ;   scanf("%s", &s)
    36                                          ;   a[i] = s
    37                                          ;   for j to len(s)
    38                                          ;       b[i] = b[i] * 10 + conversie(s[j])
    39                                          ;
    40                                          ; for i to n:
    41                                          ;   printf("%d", b[i])
    42                                          ;   printf("", b[i])
    43                                          
    44 00000000 68[00000000]                    push mesaj_n
    45 00000005 FF15[00000000]                  call [printf]
    46 0000000B 83C404                          add esp, 4
    47                                          
    48 0000000E 68[6E000000]                    push n
    49 00000013 68[08000000]                    push format_n
    50 00000018 FF15[00000000]                  call [scanf]
    51 0000001E 83C408                          add esp, 8
    52                                          
    53 00000021 8B0D[6E000000]                  mov ecx, [n]
    54 00000027 E35F                            jecxz sfarsit
    55 00000029 BF[76000000]                    mov edi, a
    56                                      first_loop:
    57 0000002E 60                              pushad
    58 0000002F 68[0B000000]                    push mesaj_nHexa
    59 00000034 FF15[00000000]                  call [printf]
    60 0000003A 83C404                          add esp, 4
    61 0000003D 61                              popad
    62                                      
    63 0000003E 60                              pushad
    64 0000003F 68[72000000]                    push s
    65 00000044 68[05000000]                    push format_numar_char
    66 00000049 FF15[00000000]                  call [scanf]
    67 0000004F 83C408                          add esp, 8
    68 00000052 61                              popad
    69                                          
    70 00000053 A1[72000000]                    mov eax, [s]
    71 00000058 AB                              stosd
    72                                      
    73 00000059 E2D3                        loop first_loop
    74 0000005B 8B0D[6E000000]                  mov ecx, [n]
    75 00000061 BE[76000000]                    mov esi, a
    76                                      second_loop:
    77 00000066 60                              pushad
    78 00000067 AD                              lodsd
    79 00000068 50                              push eax
    80 00000069 68[36000000]                    push mesaj_signed
    81 0000006E FF15[00000000]                  call [printf]
    82 00000074 83C404                          add esp, 4
    83 00000077 61                              popad
    84 00000078 60                              pushad
    85 00000079 50                              push eax
    86 0000007A 68[51000000]                    push mesaj_unsigned
    87 0000007F FF15[00000000]                  call [printf]
    88 00000085 61                              popad
    89                                      
    90 00000086 E2DE                        loop second_loop
    91                                      sfarsit:
    92                                  
    93 00000088 6A00                            push    dword 0
    94 0000008A FF15[00000000]                  call    [exit]       
